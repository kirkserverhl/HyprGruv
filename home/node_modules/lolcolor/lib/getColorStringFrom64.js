'use strict';

const convertRgbCollectionToHex = require('./convertRgbCollectionToHex');
const getIntegerFromString = require('./getIntegerFromString');

const colors = {
  rgb: [
    [0, 0, 0],
    [0, 0, 85],
    [0, 0, 170],
    [0, 0, 255],
    [85, 0, 0],
    [85, 0, 85],
    [85, 0, 170],
    [85, 0, 255],
    [170, 0, 0],
    [170, 0, 85],
    [170, 0, 170],
    [170, 0, 255],
    [255, 0, 0],
    [255, 0, 85],
    [255, 0, 170],
    [255, 0, 255],
    [0, 85, 0],
    [0, 85, 85],
    [0, 85, 170],
    [0, 85, 255],
    [85, 85, 0],
    [85, 85, 85],
    [85, 85, 170],
    [85, 85, 255],
    [170, 85, 0],
    [170, 85, 85],
    [170, 85, 170],
    [170, 85, 255],
    [255, 85, 0],
    [255, 85, 85],
    [255, 85, 170],
    [255, 85, 255],
    [0, 170, 0],
    [0, 170, 85],
    [0, 170, 170],
    [0, 170, 255],
    [85, 170, 0],
    [85, 170, 85],
    [85, 170, 170],
    [85, 170, 255],
    [170, 170, 0],
    [170, 170, 85],
    [170, 170, 170],
    [170, 170, 255],
    [255, 170, 0],
    [255, 170, 85],
    [255, 170, 170],
    [255, 170, 255],
    [0, 255, 0],
    [0, 255, 85],
    [0, 255, 170],
    [0, 255, 255],
    [85, 255, 0],
    [85, 255, 85],
    [85, 255, 170],
    [85, 255, 255],
    [170, 255, 0],
    [170, 255, 85],
    [170, 255, 170],
    [170, 255, 255],
    [255, 255, 0],
    [255, 255, 85],
    [255, 255, 170],
    [255, 255, 255],
  ],
  hsl: [
    [0, 0, 0], // Black
    [240, 1.00, 0.17], // Navy
    [240, 1.00, 0.33], // Duke blue
    [240, 1.00, 0.50], // Blue
    [0, 1.00, 0.17], // Dark Red
    [300, 1.00, 0.17],
    [270, 1.00, 0.33],
    [260, 1.00, 0.50],
    [0, 1.00, 0.33], // Cherry
    [330, 1.00, 0.33], // Hot Pink
    [300, 1.00, 0.33], // Purple-pink
    [280, 1.00, 0.50],
    [0, 1.00, 0.50], // Red
    [340, 1.00, 0.50],
    [320, 1.00, 0.50], // Bright pink
    [300, 1.00, 0.50], // Fuchsia
    [120, 1.00, 0.17],
    [180, 1.00, 0.17],
    [210, 1.00, 0.33],
    [220, 1.00, 0.50],
    [60, 1.00, 0.17],
    [0, 0.00, 0.33], // Davy's gray
    [240, 0.33, 0.50],
    [240, 1.00, 0.67],
    [30, 1.00, 0.33],
    [0, 0.33, 0.50],
    [300, 0.33, 0.50],
    [270, 1.00, 0.67],
    [20, 1.00, 0.50],
    [0, 1.00, 0.67],
    [330, 1.00, 0.67],
    [300, 1.00, 0.67],
    [120, 1.00, 0.33],
    [150, 1.00, 0.33], // Jade?
    [180, 1.00, 0.33],
    [200, 1.00, 0.50],
    [90, 1.00, 0.33],
    [120, 0.33, 0.50],
    [180, 0.33, 0.50],
    [210, 1.00, 0.67],
    [60, 1.00, 0.33],
    [60, 0.33, 0.50],
    [0, 0.00, 0.67],
    [240, 1.00, 0.83],
    [40, 1.00, 0.50], // Dark tangerine?
    [30, 1.00, 0.67],
    [0, 1.00, 0.83],
    [300, 1.00, 0.83],
    [120, 1.00, 0.50], // Green
    [140, 1.00, 0.50],
    [160, 1.00, 0.50],
    [180, 1.00, 0.50], // Aqua
    [100, 1.00, 0.50],
    [120, 1.00, 0.67],
    [150, 1.00, 0.67],
    [180, 1.00, 0.67],
    [80, 1.00, 0.50],
    [90, 1.00, 0.67],
    [120, 1.00, 0.83],
    [180, 1.00, 0.83], // Sky blue?
    [60, 1.00, 0.50], // Yellow
    [60, 1.00, 0.67], // Unmellow yellow?
    [60, 1.00, 0.83], // Light yellow?
    [0, 0.00, 1.00], // White
  ],
};

colors.hex = convertRgbCollectionToHex(colors.rgb);

module.exports = function getColorStringFrom64() {
  const selection = getIntegerFromString(63, this.base);

  return colors[this.colorModel][selection];
};
